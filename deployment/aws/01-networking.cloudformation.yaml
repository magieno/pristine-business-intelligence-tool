AWSTemplateFormatVersion: "2010-09-09"
Description: "Stack that defines the networking."
Resources:
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC

  PublicSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: The public security group
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: '-1'
          FromPort: '-1'
          ToPort: '-1'
          CidrIp: 0.0.0.0/0

  PublicSubnetGroup:
    Type: "AWS::ElastiCache::SubnetGroup"
    Properties:
      Description: The public subnet group
      SubnetIds:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2

  PublicSubnet1:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet1CidrBlock
      AvailabilityZone: !Ref PublicSubnet1RegionAZ

  PublicSubnet2:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet2CidrBlock
      AvailabilityZone: !Ref PublicSubnet2RegionAZ

  PublicSubnet1RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  PublicSubnetInternetGatewayRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  NatGatewayIp:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayIp.AllocationId
      SubnetId: !Ref PublicSubnet1

  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'

  VPCGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true

  LambdaRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC

  LambdaSubnet1:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref LambdaSubnet1CidrBlock
      AvailabilityZone: !Ref LambdaSubnet1RegionAZ

  LambdaSubnet2:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref LambdaSubnet2CidrBlock
      AvailabilityZone: !Ref LambdaSubnet2RegionAZ

  LambdaSubnet1RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref LambdaRouteTable
      SubnetId: !Ref LambdaSubnet1

  LambdaSubnet2RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref LambdaRouteTable
      SubnetId: !Ref LambdaSubnet2

  LambdaNatRoute:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId: !Ref LambdaRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway


Parameters:
  PublicSubnet1CidrBlock:
    Type: String
    Default: 10.0.1.0/24
  PublicSubnet2CidrBlock:
    Type: String
    Default: 10.0.2.0/24
  PublicSubnet1RegionAZ:
    Type: String
    Default: "us-east-2a"
  PublicSubnet2RegionAZ:
    Type: String
    Default: "us-east-2b"
  LambdaSubnet1CidrBlock:
    Type: String
    Default: 10.0.192.0/20
  LambdaSubnet2CidrBlock:
    Type: String
    Default: 10.0.208.0/20
  LambdaSubnet1RegionAZ:
    Type: String
    Default: "us-east-2a"
  LambdaSubnet2RegionAZ:
    Type: String
    Default: "us-east-2b"

Outputs:
  InternetGateway:
    Description: The ID of the internet gateway
    Value: !Ref InternetGateway
    Export:
      Name: !Sub "${AWS::StackName}:internet-gateway:id"

  VPC:
    Description: The ID of the VPC
    Value: !Ref VPC
    Export:
      Name: !Sub "${AWS::StackName}:vpc:id"

  NatGatewayId:
    Description: The Id of the Nat Gateway
    Value: !Ref NatGateway
    Export:
      Name: !Sub "${AWS::StackName}:nat-gateway:id"

  NatGatewayAllocationId:
    Description: The Id of the Nat Gateway
    Value: !GetAtt NatGatewayIp.AllocationId
    Export:
      Name: !Sub "${AWS::StackName}:nat-gateway:allocation-id"

  LambdaRouteTable:
    Description: The ID of the lambda route table
    Value: !Ref LambdaRouteTable
    Export:
      Name: !Sub "${AWS::StackName}:lambda-route-table:id"

  LambdsSubnet1:
    Description: The ID of the lambda subnet 1
    Value: !Ref LambdaSubnet1
    Export:
      Name: !Sub "${AWS::StackName}:lambda-subnet-1:id"

  LambdaSubnet2:
    Description: The ID of the lambda subnet 2
    Value: !Ref LambdaSubnet2
    Export:
      Name: !Sub "${AWS::StackName}:lambda-subnet-2:id"

  PublicSecurityGroup:
    Description: The public security group
    Value: !Ref PublicSecurityGroup
    Export:
      Name: !Sub "${AWS::StackName}:public-security-group:id"
